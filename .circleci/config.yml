version: 2.1

orbs:
  docker: circleci/docker@2.4.0
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@0.11.2

jobs:
  build-app:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: Install Dependencies
          command: |
            python3 -m venv capstone
            . capstone/bin/activate
            make install
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt"}}
      - run:
          name: Lint
          command: |
            . capstone/bin/activate
            make lint
            
  docker-build-and-push:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: keraid/capstone-project
          tag: latest
      - docker/push:
          image: keraid/capstone-project
          tag: latest
  
#    docker:
#      - image: docker:latest
#    steps:
#      - checkout
#      - setup_remote_docker
#      - run:
#          name: Build docker image
#          command: |
#            docker build -t capstone-project .
#            docker tag capstone-project keraid/capstone-project
#            docker image ls
#      - run:
#          name: Push docker image
#          command: |
#            docker login -u "$DOCKER_LOGIN" -p "$DOCKER_PASSWORD" docker.io
#            docker push keraid/capstone-project:latest


  test-eks-cluster:
    docker:
      - image: cimg/python:3.10
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install:
          kubectl-version: v1.22.0
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          name: Test cluster
          command: |
            kubectl get services


  create-and-verify-k8s-deployment:
    docker:
      - image: cimg/python:3.7
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          show-kubectl-command: true
          resource-file-path: deployment.yml
          resource-name: deployment/capstone-project
      - run:
          name: Verify app deployment to cluster
          command: |
            kubectl get nodes
            kubectl get all
            kubectl get services
            kubectl get deployments

workflows:
    deployment:
      jobs:
        - build-app
        - docker-build-and-push:
            requires:
              - build-app
        
        - aws-eks/create-cluster:
            cluster-name: capstone-project-eks
            aws-region: $AWS_DEFAULT_REGION
            requires:
              - docker-build-and-push
            
        - test-eks-cluster:
            cluster-name: capstone-project-eks
            requires:
              - aws-eks/create-cluster
      
        - create-and-verify-k8s-deployment:
            cluster-name: capstone-project-eks
            requires:
              - test-eks-cluster